author: janmir
description: Simple IR remote with wifi.
version: 1.0
platform: esp8266

region: ap-northeast-1

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

# Optional. List of tags for online search.
tags:
  - c
  - js
  - ir

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

config_schema:
  - ["config", "o", {title: "My app custom settings"}]
  - ["config.blinky01", "i", 1, {title: "First blinky-blinky."}]
  - ["config.blinky02", "i", 2, {title: "Second blinky-blinky."}]
  - ["config.blinky03", "i", 3, {title: "Third blinky-blinky."}]
  - ["config.clock", "i", 4, {title: "Clock pin for RTP."}]
  - ["config.ir", "i", 4, {title: "Infrared pin."}]
  - ["config.initWait", "i", 30, {title: "Initialization wait time in seconds."}]
  - ["config.blinkWait", "i", 500, {title: "Blink wait time in miliseconds."}]
  - ["config.mqttTopic", "s", "airfy/device0", {title: "Blink wait time in miliseconds."}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", get_cfg()->device.id);
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/sys_config.c or build/gen/sys_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]


# List of libraries used by this app, in order of initialisation
libs:
  - origin: https://github.com/mongoose-os-libs/rpc-common
  - origin: https://github.com/mongoose-os-libs/rpc-loopback
  - origin: https://github.com/mongoose-os-libs/mjs
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/i2c
  - origin: https://github.com/mongoose-os-libs/http-server
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-service-wifi
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/spi
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/rpc-mqtt

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-05-18
